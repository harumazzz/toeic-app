{
    "swagger": "2.0",
    "info": {
        "contact": {}
    },
    "paths": {
        "/api/auth/login": {
            "post": {
                "description": "Authenticate a user and return a JWT token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Login user",
                "parameters": [
                    {
                        "description": "Login credentials",
                        "name": "login",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.loginUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Login successful",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/api.loginUserResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "401": {
                        "description": "Authentication failed",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    }
                }
            }
        },
        "/api/auth/logout": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Logout a user by invalidating their access and refresh tokens",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Logout user",
                "parameters": [
                    {
                        "description": "Logout request with optional refresh token",
                        "name": "logout",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/api.logoutRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Logout successful",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized if the user is not authenticated",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    }
                }
            }
        },
        "/api/auth/refresh-token": {
            "post": {
                "description": "Get a new access token using a refresh token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Refresh access token",
                "parameters": [
                    {
                        "description": "Refresh token",
                        "name": "refresh_token",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.refreshTokenRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Token refreshed successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/api.refreshTokenResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "401": {
                        "description": "Invalid refresh token",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    }
                }
            }
        },
        "/api/auth/register": {
            "post": {
                "description": "Register a new user and return authentication tokens",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Register a new user",
                "parameters": [
                    {
                        "description": "Registration information",
                        "name": "register",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.registerUserRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "User registered successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/api.registerUserResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/admin/backups": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Lists all available database backups",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "List database backups",
                "responses": {
                    "200": {
                        "description": "Backups retrieved successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/api.backupListItem"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Failed to retrieve backups",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Creates a backup of the PostgreSQL database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "Create database backup",
                "parameters": [
                    {
                        "description": "Backup details",
                        "name": "backup",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.backupRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Backup created successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/api.backupResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid request parameters",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "500": {
                        "description": "Failed to create backup",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/admin/backups/download/{filename}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Downloads a specific database backup file",
                "produces": [
                    "application/octet-stream"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "Download database backup",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Backup filename",
                        "name": "filename",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Backup file content",
                        "schema": {
                            "type": "file"
                        }
                    },
                    "400": {
                        "description": "Invalid filename",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "404": {
                        "description": "Backup file not found",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "500": {
                        "description": "Failed to serve backup file",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/admin/backups/restore": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Restores the database from a specified backup file",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "Restore database from backup",
                "parameters": [
                    {
                        "description": "Restore details",
                        "name": "restore",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.restoreRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Database restored successfully",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "400": {
                        "description": "Invalid request parameters",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "404": {
                        "description": "Backup file not found",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "500": {
                        "description": "Failed to restore database",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/admin/backups/upload": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Uploads a backup file to the server",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "Upload database backup",
                "parameters": [
                    {
                        "type": "file",
                        "description": "Backup SQL file",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Backup description",
                        "name": "description",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Backup uploaded successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/api.backupResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid file or description",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "500": {
                        "description": "Failed to save backup file",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/admin/backups/{filename}": {
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Deletes a specific database backup file",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "Delete database backup",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Backup filename",
                        "name": "filename",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Backup deleted successfully",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "400": {
                        "description": "Invalid filename",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "404": {
                        "description": "Backup file not found",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "500": {
                        "description": "Failed to delete backup file",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/admin/cache/advanced-stats": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get comprehensive cache statistics including distributed cache, warming, and metrics",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Get advanced cache statistics",
                "responses": {
                    "200": {
                        "description": "Advanced cache statistics",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/admin/cache/clear": {
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Clear all cached data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Clear all cache",
                "responses": {
                    "200": {
                        "description": "Cache cleared successfully",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/admin/cache/clear/{pattern}": {
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Clear cached data matching a specific pattern",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Clear cache by pattern",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Cache key pattern to clear",
                        "name": "pattern",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Cache pattern cleared successfully",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/admin/cache/health": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get health status of all cache components",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Get cache health status",
                "responses": {
                    "200": {
                        "description": "Cache health status",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/admin/cache/invalidate/tag/{tag}": {
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Invalidate all cache entries associated with a specific tag",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Invalidate cache by tag",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Tag to invalidate",
                        "name": "tag",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Cache invalidated successfully",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/admin/cache/stats": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get cache statistics and information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Get cache statistics",
                "responses": {
                    "200": {
                        "description": "Cache statistics",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/admin/cache/warm": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Manually trigger cache warming for frequently accessed data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Trigger manual cache warming",
                "responses": {
                    "200": {
                        "description": "Cache warming initiated successfully",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "400": {
                        "description": "Cache warming not available",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/admin/i18n/languages/{language}/export": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Export all messages for a specific language as JSON",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "i18n"
                ],
                "summary": "Export messages (Admin only)",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Language code (en, vi)",
                        "name": "language",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Messages exported successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "additionalProperties": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid language",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "403": {
                        "description": "Forbidden - Admin access required",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/admin/i18n/languages/{language}/messages": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Add or update a translation message for a specific language",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "i18n"
                ],
                "summary": "Add or update a message (Admin only)",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Language code (en, vi)",
                        "name": "language",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Message details",
                        "name": "message",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.MessageRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Message updated successfully",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "201": {
                        "description": "Message created successfully",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "403": {
                        "description": "Forbidden - Admin access required",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/admin/i18n/languages/{language}/messages/batch": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Add or update multiple translation messages for a specific language",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "i18n"
                ],
                "summary": "Add or update multiple messages (Admin only)",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Language code (en, vi)",
                        "name": "language",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Messages details",
                        "name": "messages",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.MessagesRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Messages updated successfully",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "403": {
                        "description": "Forbidden - Admin access required",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/admin/performance/concurrency/reset": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Resets all concurrency metrics and statistics (admin only)",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Performance"
                ],
                "summary": "Reset concurrency metrics",
                "responses": {
                    "200": {
                        "description": "Metrics reset successfully",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "403": {
                        "description": "Forbidden - Admin access required",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/analyze/cache": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get cached word analysis result by user and text",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "text-analysis"
                ],
                "summary": "Get word analysis by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Text to search for",
                        "name": "text",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Cached analysis found",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/api.analyzeTextResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid request parameters",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "404": {
                        "description": "Analysis not found in cache",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/analyze/cache/clear": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Clear the analyze service cache (admin only)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "text-analysis"
                ],
                "summary": "Clear analyze service cache",
                "responses": {
                    "200": {
                        "description": "Cache cleared successfully",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "403": {
                        "description": "Admin access required",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/analyze/health": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Check the health status of the analyze service",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "text-analysis"
                ],
                "summary": "Get analyze service health",
                "responses": {
                    "200": {
                        "description": "Service health status",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/analyze/stats": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get detailed statistics about the analyze service",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "text-analysis"
                ],
                "summary": "Get analyze service statistics",
                "responses": {
                    "200": {
                        "description": "Service statistics",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/analyze/text": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Analyze English text to get word levels and synonym suggestions",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "text-analysis"
                ],
                "summary": "Analyze text",
                "parameters": [
                    {
                        "description": "Text analysis request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.analyzeTextRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Text analyzed successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/api.analyzeTextResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid request parameters",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "503": {
                        "description": "Analyze service unavailable",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/analyze/texts": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Analyze multiple English texts concurrently to get word levels and synonym suggestions",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "text-analysis"
                ],
                "summary": "Analyze multiple texts",
                "parameters": [
                    {
                        "description": "Multiple texts analysis request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.analyzeMultipleTextsRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Texts analyzed successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/api.analyzeTextResponse"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid request parameters",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "503": {
                        "description": "Analyze service unavailable",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/content-questions/{content_id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get a list of all questions for a specific content",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "questions"
                ],
                "summary": "List questions by content",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Content ID",
                        "name": "content_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Questions retrieved successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/api.QuestionResponse"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid content ID",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "500": {
                        "description": "Failed to retrieve questions",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/contents": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Add new content to a part",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "contents"
                ],
                "summary": "Create new content",
                "parameters": [
                    {
                        "description": "Content object to create",
                        "name": "content",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.createContentRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Content created successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/api.ContentResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid request body",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "500": {
                        "description": "Failed to create content",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/contents/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieve specific content by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "contents"
                ],
                "summary": "Get content by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Content ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Content retrieved successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/api.ContentResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid content ID",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "404": {
                        "description": "Content not found",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "500": {
                        "description": "Failed to retrieve content",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update existing content by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "contents"
                ],
                "summary": "Update content",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Content ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Content fields to update",
                        "name": "content",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.updateContentRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Content updated successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/api.ContentResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid request body or content ID",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "404": {
                        "description": "Content not found",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "500": {
                        "description": "Failed to update content",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Delete specific content by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "contents"
                ],
                "summary": "Delete content",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Content ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Content deleted successfully",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "400": {
                        "description": "Invalid content ID",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "500": {
                        "description": "Failed to delete content",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/exam-attempts": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get a list of exam attempts for the authenticated user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "exam-attempts"
                ],
                "summary": "List user's exam attempts",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Exam attempts retrieved successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/api.ExamAttemptResponse"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid query parameters",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "500": {
                        "description": "Failed to retrieve exam attempts",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Create a new exam attempt for the authenticated user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "exam-attempts"
                ],
                "summary": "Start a new exam attempt",
                "parameters": [
                    {
                        "description": "Exam attempt to create",
                        "name": "attempt",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.createExamAttemptRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Exam attempt started successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/api.ExamAttemptResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid request body",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "404": {
                        "description": "Exam not found",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "409": {
                        "description": "User already has an active attempt for this exam",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "500": {
                        "description": "Failed to create exam attempt",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/exam-attempts/stats": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get statistics about user's exam attempts",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "exam-attempts"
                ],
                "summary": "Get exam attempt statistics",
                "responses": {
                    "200": {
                        "description": "Statistics retrieved successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/api.ExamAttemptStatsResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "500": {
                        "description": "Failed to retrieve statistics",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/exam-attempts/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieve a specific exam attempt by its ID (user can only access their own attempts)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "exam-attempts"
                ],
                "summary": "Get an exam attempt by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Exam Attempt ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Exam attempt retrieved successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/api.ExamAttemptResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid attempt ID",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "403": {
                        "description": "Access denied - not your exam attempt",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "404": {
                        "description": "Exam attempt not found",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "500": {
                        "description": "Failed to retrieve exam attempt",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update the status or score of an exam attempt",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "exam-attempts"
                ],
                "summary": "Update exam attempt status",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Exam Attempt ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update data",
                        "name": "update",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.updateExamAttemptRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Exam attempt updated successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/api.ExamAttemptResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "403": {
                        "description": "Access denied - not your exam attempt",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "404": {
                        "description": "Exam attempt not found",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "500": {
                        "description": "Failed to update exam attempt",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Delete an exam attempt (admin only or own incomplete attempts)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "exam-attempts"
                ],
                "summary": "Delete an exam attempt",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Exam Attempt ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Exam attempt deleted successfully",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "400": {
                        "description": "Invalid attempt ID",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "403": {
                        "description": "Access denied",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "404": {
                        "description": "Exam attempt not found",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "500": {
                        "description": "Failed to delete exam attempt",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/exam-attempts/{id}/abandon": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Abandon an active exam attempt",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "exam-attempts"
                ],
                "summary": "Abandon exam attempt",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Exam Attempt ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Exam attempt abandoned successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/api.ExamAttemptResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid attempt ID",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "404": {
                        "description": "Exam attempt not found",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "500": {
                        "description": "Failed to abandon exam attempt",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/exam-attempts/{id}/answers": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get all answers for a specific exam attempt",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user-answers"
                ],
                "summary": "Get answers by attempt",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Attempt ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Answers retrieved successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/api.AttemptAnswersResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid attempt ID",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "404": {
                        "description": "Attempt not found",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "500": {
                        "description": "Failed to retrieve answers",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/exam-attempts/{id}/complete": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Complete an exam attempt with final score",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "exam-attempts"
                ],
                "summary": "Complete exam attempt",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Exam Attempt ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Final score",
                        "name": "score",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Exam attempt completed successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/api.ExamAttemptResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "404": {
                        "description": "Exam attempt not found",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "500": {
                        "description": "Failed to complete exam attempt",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/exam-attempts/{id}/score": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get scoring information for an exam attempt",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user-answers"
                ],
                "summary": "Get attempt score",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Attempt ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Score retrieved successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/api.AttemptScoreResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid attempt ID",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "404": {
                        "description": "Attempt not found",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "500": {
                        "description": "Failed to retrieve score",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/exam-parts/{exam_id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get a list of all parts for a specific exam",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "parts"
                ],
                "summary": "List parts by exam",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Exam ID",
                        "name": "exam_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Parts retrieved successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/api.PartResponse"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid exam ID",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "500": {
                        "description": "Failed to retrieve parts",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/examples": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get a list of all examples",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "examples"
                ],
                "summary": "List examples",
                "responses": {
                    "200": {
                        "description": "Examples retrieved successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/api.ExampleResponse"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Failed to retrieve examples",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Create a new example",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "examples"
                ],
                "summary": "Create example",
                "parameters": [
                    {
                        "description": "Example details",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.createExampleRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Example created successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/api.ExampleResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid request body",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "500": {
                        "description": "Failed to create example",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/examples/batch": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get multiple examples by their IDs in a single request",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "examples"
                ],
                "summary": "Batch get examples by IDs",
                "parameters": [
                    {
                        "description": "List of example IDs",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.batchGetExamplesRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Examples retrieved successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/api.ExampleResponse"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid request body",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "500": {
                        "description": "Failed to retrieve examples",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/examples/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get details of an example by its ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "examples"
                ],
                "summary": "Get example by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Example ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Example retrieved successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/api.ExampleResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid example ID",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "404": {
                        "description": "Example not found",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "500": {
                        "description": "Failed to retrieve example",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update an existing example",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "examples"
                ],
                "summary": "Update example",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Example ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Example details",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.updateExampleRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Example updated successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/api.ExampleResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid request body or example ID",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "404": {
                        "description": "Example not found",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "500": {
                        "description": "Failed to update example",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Delete an existing example",
                "tags": [
                    "examples"
                ],
                "summary": "Delete example",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Example ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Example deleted successfully",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "400": {
                        "description": "Invalid example ID",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "500": {
                        "description": "Failed to delete example",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/exams": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get a list of all exams with pagination",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "exams"
                ],
                "summary": "List exams",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Exams retrieved successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/api.ExamResponse"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid query parameters",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "500": {
                        "description": "Failed to retrieve exams",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Add a new exam to the database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "exams"
                ],
                "summary": "Create a new exam",
                "parameters": [
                    {
                        "description": "Exam object to create",
                        "name": "exam",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.createExamRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Exam created successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/api.ExamResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid request body",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "500": {
                        "description": "Failed to create exam",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/exams/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieve a specific exam entry by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "exams"
                ],
                "summary": "Get an exam by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Exam ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Exam retrieved successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/api.ExamResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid exam ID",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "404": {
                        "description": "Exam not found",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "500": {
                        "description": "Failed to retrieve exam",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update an existing exam by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "exams"
                ],
                "summary": "Update an exam",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Exam ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Exam fields to update",
                        "name": "exam",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.updateExamRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Exam updated successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/api.ExamResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid request body or exam ID",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "404": {
                        "description": "Exam not found",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "500": {
                        "description": "Failed to update exam",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Delete a specific exam by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "exams"
                ],
                "summary": "Delete an exam",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Exam ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Exam deleted successfully",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "400": {
                        "description": "Invalid exam ID",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "500": {
                        "description": "Failed to delete exam",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/exams/{id}/leaderboard": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get the leaderboard for a specific exam",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "exam-attempts"
                ],
                "summary": "Get exam leaderboard",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Exam ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Leaderboard retrieved successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/api.LeaderboardEntry"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid parameters",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "404": {
                        "description": "Exam not found",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "500": {
                        "description": "Failed to retrieve leaderboard",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/exams/{id}/questions": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieves all questions for an exam organized by parts and contents",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "exams"
                ],
                "summary": "Get all questions for an exam",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Exam ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Questions retrieved successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/api.ExamQuestionsResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid exam ID",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "404": {
                        "description": "Exam not found",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "500": {
                        "description": "Failed to retrieve questions",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/grammars": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get a list of grammars with pagination.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "grammars"
                ],
                "summary": "List grammars",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Limit",
                        "name": "limit",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Grammars retrieved successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/api.GrammarResponse"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid query parameters",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "500": {
                        "description": "Failed to retrieve grammars",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Add a new grammar to the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "grammars"
                ],
                "summary": "Create a new grammar",
                "parameters": [
                    {
                        "description": "Grammar object to create",
                        "name": "grammar",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.createGrammarRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Grammar created successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/api.GrammarResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid request body",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "500": {
                        "description": "Failed to create grammar",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/grammars/batch": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get multiple grammars by their IDs in a single request",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "grammars"
                ],
                "summary": "Batch get grammars by IDs",
                "parameters": [
                    {
                        "description": "List of grammar IDs",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.batchGetGrammarsRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Grammars retrieved successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/api.GrammarResponse"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid request body",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "500": {
                        "description": "Failed to retrieve grammars",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/grammars/level": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get a list of grammars filtered by level, with pagination.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "grammars"
                ],
                "summary": "List grammars by level",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Level to filter by",
                        "name": "level",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Limit",
                        "name": "limit",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Grammars retrieved successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/api.GrammarResponse"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid query parameters",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "500": {
                        "description": "Failed to retrieve grammars by level",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/grammars/random": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieve a single random grammar entry from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "grammars"
                ],
                "summary": "Get a random grammar",
                "responses": {
                    "200": {
                        "description": "Random grammar retrieved successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/api.GrammarResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Failed to retrieve random grammar",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/grammars/search": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Search grammars by title, key, or tag, with pagination.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "grammars"
                ],
                "summary": "Search grammars",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search query",
                        "name": "query",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Limit",
                        "name": "limit",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Grammars retrieved successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/api.GrammarResponse"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid query parameters",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "500": {
                        "description": "Failed to search grammars",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/grammars/tag": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get a list of grammars filtered by a specific tag, with pagination.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "grammars"
                ],
                "summary": "List grammars by tag",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Tag to filter by",
                        "name": "tag",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Limit",
                        "name": "limit",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Grammars retrieved successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/api.GrammarResponse"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid query parameters",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "500": {
                        "description": "Failed to retrieve grammars by tag",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/grammars/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieve a specific grammar entry by its ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "grammars"
                ],
                "summary": "Get a grammar by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Grammar ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Grammar retrieved successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/api.GrammarResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid grammar ID",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "404": {
                        "description": "Grammar not found",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "500": {
                        "description": "Failed to retrieve grammar",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update an existing grammar entry by its ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "grammars"
                ],
                "summary": "Update a grammar",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Grammar ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Grammar object with fields to update",
                        "name": "grammar",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.updateGrammarRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Grammar updated successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/api.GrammarResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid request body or grammar ID",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "404": {
                        "description": "Grammar not found",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "500": {
                        "description": "Failed to update grammar",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Delete a specific grammar entry by its ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "grammars"
                ],
                "summary": "Delete a grammar",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Grammar ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Grammar deleted successfully",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "400": {
                        "description": "Invalid grammar ID",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "404": {
                        "description": "Grammar not found",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "500": {
                        "description": "Failed to delete grammar",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/i18n/current": {
            "get": {
                "description": "Get the current language being used for the request",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "i18n"
                ],
                "summary": "Get current language",
                "responses": {
                    "200": {
                        "description": "Current language retrieved successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/api.LanguageResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/i18n/languages": {
            "get": {
                "description": "Get list of all supported languages with their information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "i18n"
                ],
                "summary": "Get supported languages",
                "responses": {
                    "200": {
                        "description": "Languages retrieved successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/api.I18nStatsResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/i18n/stats": {
            "get": {
                "description": "Get detailed statistics about the i18n system",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "i18n"
                ],
                "summary": "Get i18n statistics",
                "responses": {
                    "200": {
                        "description": "I18n statistics retrieved successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "additionalProperties": true
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/i18n/translate": {
            "get": {
                "description": "Test translation of a message key with the current language",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "i18n"
                ],
                "summary": "Test message translation",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Message key to translate",
                        "name": "key",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Message translated successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid request parameters",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/part-contents/{part_id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get a list of all contents for a specific part",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "contents"
                ],
                "summary": "List contents by part",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Part ID",
                        "name": "part_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Contents retrieved successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/api.ContentResponse"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid part ID",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "500": {
                        "description": "Failed to retrieve contents",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/parts": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Add a new part to an exam",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "parts"
                ],
                "summary": "Create a new part",
                "parameters": [
                    {
                        "description": "Part object to create",
                        "name": "part",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.createPartRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Part created successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/api.PartResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid request body",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "500": {
                        "description": "Failed to create part",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/parts/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieve a specific part by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "parts"
                ],
                "summary": "Get a part by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Part ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Part retrieved successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/api.PartResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid part ID",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "404": {
                        "description": "Part not found",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "500": {
                        "description": "Failed to retrieve part",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update an existing part by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "parts"
                ],
                "summary": "Update a part",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Part ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Part fields to update",
                        "name": "part",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.updatePartRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Part updated successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/api.PartResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid request body or part ID",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "404": {
                        "description": "Part not found",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "500": {
                        "description": "Failed to update part",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Delete a specific part by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "parts"
                ],
                "summary": "Delete a part",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Part ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Part deleted successfully",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "400": {
                        "description": "Invalid part ID",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "500": {
                        "description": "Failed to delete part",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/performance/concurrency": {
            "get": {
                "description": "Returns detailed concurrency metrics including active operations, worker pool status, and performance statistics",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Performance"
                ],
                "summary": "Get concurrency metrics",
                "responses": {
                    "200": {
                        "description": "Concurrency metrics retrieved successfully",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "concurrency_metrics": {
                                    "type": "object"
                                },
                                "connection_pool_stats": {
                                    "type": "object"
                                },
                                "request_handler_stats": {
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/performance/concurrency/health": {
            "get": {
                "description": "Returns health status of concurrency management components",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Performance"
                ],
                "summary": "Get concurrency health status",
                "responses": {
                    "200": {
                        "description": "Health status retrieved successfully",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "components": {
                                    "type": "object"
                                },
                                "overall_health": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/performance/search-test": {
            "get": {
                "description": "Test search performance with timing information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Performance"
                ],
                "summary": "Get search performance test",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search query to test",
                        "name": "query",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Search performance results",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Invalid parameters",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "500": {
                        "description": "Search failed",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/performance/stats": {
            "get": {
                "description": "Get comprehensive performance metrics for the application",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Performance"
                ],
                "summary": "Get performance statistics",
                "responses": {
                    "200": {
                        "description": "Performance statistics",
                        "schema": {
                            "$ref": "#/definitions/api.PerformanceStats"
                        }
                    },
                    "500": {
                        "description": "Failed to get performance stats",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/questions": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Add a new question to content",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "questions"
                ],
                "summary": "Create a new question",
                "parameters": [
                    {
                        "description": "Question object to create",
                        "name": "question",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.createQuestionRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Question created successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/api.QuestionResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid request body",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "500": {
                        "description": "Failed to create question",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/questions/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieve a specific question by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "questions"
                ],
                "summary": "Get a question by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Question ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Question retrieved successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/api.QuestionResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid question ID",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "404": {
                        "description": "Question not found",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "500": {
                        "description": "Failed to retrieve question",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update an existing question by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "questions"
                ],
                "summary": "Update a question",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Question ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Question fields to update",
                        "name": "question",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.updateQuestionRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Question updated successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/api.QuestionResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid request body or question ID",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "404": {
                        "description": "Question not found",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "500": {
                        "description": "Failed to update question",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Delete a specific question by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "questions"
                ],
                "summary": "Delete a question",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Question ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Question deleted successfully",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "400": {
                        "description": "Invalid question ID",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "500": {
                        "description": "Failed to delete question",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/speaking/sessions": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Add a new speaking session to the database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "speaking"
                ],
                "summary": "Create a new speaking session",
                "parameters": [
                    {
                        "description": "Speaking session object to create",
                        "name": "session",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.createSpeakingSessionRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Speaking session created successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/api.SpeakingSessionResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid request body",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "500": {
                        "description": "Failed to create speaking session",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/speaking/sessions/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieve a specific speaking session by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "speaking"
                ],
                "summary": "Get a speaking session by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Speaking Session ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Speaking session retrieved successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/api.SpeakingSessionResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid session ID",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "404": {
                        "description": "Speaking session not found",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "500": {
                        "description": "Failed to retrieve speaking session",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update an existing speaking session by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "speaking"
                ],
                "summary": "Update a speaking session",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Speaking Session ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Speaking session fields to update",
                        "name": "session",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.updateSpeakingSessionRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Speaking session updated successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/api.SpeakingSessionResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid request body or session ID",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "404": {
                        "description": "Speaking session not found",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "500": {
                        "description": "Failed to update speaking session",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Delete a specific speaking session by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "speaking"
                ],
                "summary": "Delete a speaking session",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Speaking Session ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Speaking session deleted successfully",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "400": {
                        "description": "Invalid session ID",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "500": {
                        "description": "Failed to delete speaking session",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/speaking/sessions/{id}/turns": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get a list of all speaking turns for a specific session",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "speaking"
                ],
                "summary": "List speaking turns by session ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Session ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Speaking turns retrieved successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/api.SpeakingTurnResponse"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid session ID",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "500": {
                        "description": "Failed to retrieve speaking turns",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/speaking/turns": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Add a new speaking turn to a session",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "speaking"
                ],
                "summary": "Create a new speaking turn",
                "parameters": [
                    {
                        "description": "Speaking turn object to create",
                        "name": "turn",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.createSpeakingTurnRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Speaking turn created successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/api.SpeakingTurnResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid request body",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "500": {
                        "description": "Failed to create speaking turn",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/speaking/turns/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieve a specific speaking turn by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "speaking"
                ],
                "summary": "Get a speaking turn by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Speaking Turn ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Speaking turn retrieved successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/api.SpeakingTurnResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid turn ID",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "404": {
                        "description": "Speaking turn not found",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "500": {
                        "description": "Failed to retrieve speaking turn",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update an existing speaking turn by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "speaking"
                ],
                "summary": "Update a speaking turn",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Speaking Turn ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Speaking turn fields to update",
                        "name": "turn",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.updateSpeakingTurnRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Speaking turn updated successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/api.SpeakingTurnResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid request body or turn ID",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "404": {
                        "description": "Speaking turn not found",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "500": {
                        "description": "Failed to update speaking turn",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Delete a specific speaking turn by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "speaking"
                ],
                "summary": "Delete a speaking turn",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Speaking Turn ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Speaking turn deleted successfully",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "400": {
                        "description": "Invalid turn ID",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "500": {
                        "description": "Failed to delete speaking turn",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/speaking/users/{user_id}/sessions": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get a list of all speaking sessions for a specific user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "speaking"
                ],
                "summary": "List speaking sessions by user ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "user_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Speaking sessions retrieved successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/api.SpeakingSessionResponse"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid user ID",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "500": {
                        "description": "Failed to retrieve speaking sessions",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/upgrade/check": {
            "post": {
                "description": "Check if there are any updates available for the current app version",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "upgrade"
                ],
                "summary": "Check for app updates",
                "parameters": [
                    {
                        "description": "Current version information",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.upgradeCheckRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update check completed",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/upgrade.UpdateCheckResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/upgrade/current": {
            "get": {
                "description": "Get the current latest version of the application",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "upgrade"
                ],
                "summary": "Get current app version",
                "responses": {
                    "200": {
                        "description": "Current version retrieved",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/upgrade.AppVersion"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/upgrade/notify": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Send upgrade notification to users",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "upgrade"
                ],
                "summary": "Send upgrade notification (Admin only)",
                "parameters": [
                    {
                        "description": "Notification information",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.notifyUpgradeRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Notification sent successfully",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "403": {
                        "description": "Forbidden - Admin access required",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "404": {
                        "description": "Version not found",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/upgrade/stats": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get statistics about the upgrade service (admin only)",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "upgrade"
                ],
                "summary": "Get upgrade service statistics",
                "responses": {
                    "200": {
                        "description": "Upgrade statistics retrieved",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "additionalProperties": true
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "403": {
                        "description": "Forbidden - Admin access required",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/upgrade/subscribe": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Subscribe to real-time upgrade notifications with preferences",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "upgrade"
                ],
                "summary": "Subscribe to upgrade notifications",
                "parameters": [
                    {
                        "description": "Subscription preferences",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.subscriptionRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Subscribed to upgrade notifications",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/upgrade/unsubscribe": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Unsubscribe from real-time upgrade notifications",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "upgrade"
                ],
                "summary": "Unsubscribe from upgrade notifications",
                "responses": {
                    "200": {
                        "description": "Unsubscribed from upgrade notifications",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/upgrade/versions": {
            "get": {
                "description": "Get all available versions of the application",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "upgrade"
                ],
                "summary": "Get all app versions",
                "responses": {
                    "200": {
                        "description": "All versions retrieved",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "additionalProperties": {
                                                "$ref": "#/definitions/upgrade.AppVersion"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Add a new version to the system and optionally notify users",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "upgrade"
                ],
                "summary": "Add new app version (Admin only)",
                "parameters": [
                    {
                        "description": "Version information",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.addVersionRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Version added successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/upgrade.AppVersion"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "403": {
                        "description": "Forbidden - Admin access required",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/upgrade/versions/{version}": {
            "get": {
                "description": "Get details of a specific version",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "upgrade"
                ],
                "summary": "Get specific app version",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Version number (e.g., 1.0.0)",
                        "name": "version",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Version details retrieved",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/upgrade.AppVersion"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "Version not found",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/upgrade/ws": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Upgrade HTTP connection to WebSocket for real-time upgrade notifications",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "upgrade"
                ],
                "summary": "WebSocket upgrade for real-time notifications",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer JWT token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "101": {
                        "description": "Switching Protocols",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/upgrade/ws/status": {
            "get": {
                "description": "Get the current WebSocket connection statistics",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "upgrade"
                ],
                "summary": "Get WebSocket connection status",
                "responses": {
                    "200": {
                        "description": "WebSocket status retrieved",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "additionalProperties": true
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/user-answers": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Submit an answer for a question in an exam attempt",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user-answers"
                ],
                "summary": "Submit a user answer",
                "parameters": [
                    {
                        "description": "User answer to submit",
                        "name": "answer",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.createUserAnswerRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Answer submitted successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/api.UserAnswerResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid request body",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "404": {
                        "description": "Attempt or question not found",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "409": {
                        "description": "Answer already exists for this question",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "500": {
                        "description": "Failed to submit answer",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/user-answers/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieve a specific user answer by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user-answers"
                ],
                "summary": "Get a user answer by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User Answer ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User answer retrieved successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/api.UserAnswerResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid answer ID",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "404": {
                        "description": "User answer not found",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "500": {
                        "description": "Failed to retrieve user answer",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update a user's answer for a question",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user-answers"
                ],
                "summary": "Update a user answer",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User Answer ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated answer data",
                        "name": "answer",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Answer updated successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/api.UserAnswerResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "404": {
                        "description": "Answer not found",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "500": {
                        "description": "Failed to update answer",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Delete a user's answer (admin only or own incomplete attempts)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user-answers"
                ],
                "summary": "Delete a user answer",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User Answer ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Answer deleted successfully",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "400": {
                        "description": "Invalid answer ID",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "403": {
                        "description": "Access denied",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "404": {
                        "description": "Answer not found",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "500": {
                        "description": "Failed to delete answer",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/user-word-progress": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Create a new user word progress record",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user-word-progress"
                ],
                "summary": "Create user word progress",
                "parameters": [
                    {
                        "description": "User word progress data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.createUserWordProgressRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "User word progress created successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/api.UserWordProgressResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid request parameters",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "500": {
                        "description": "Failed to create user word progress",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/user-word-progress/reviews": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get a list of words that are due for review for the current user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user-word-progress"
                ],
                "summary": "Get words for review",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Maximum number of words to return (optional)",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Words for review retrieved successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/api.WordWithProgressResponse"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/user-word-progress/saved": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get a list of all words saved by the current user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user-word-progress"
                ],
                "summary": "Get all saved words",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Maximum number of words to return (optional)",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of words to skip (optional)",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Saved words retrieved successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/api.WordProgressResponse"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/user-word-progress/word/{word_id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get a specific word with its progress information for the current user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user-word-progress"
                ],
                "summary": "Get word with progress",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Word ID",
                        "name": "word_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Word with progress retrieved successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/api.WordWithProgressResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid word ID format",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "404": {
                        "description": "Word not found",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/user-word-progress/{word_id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get a specific word progress record for the current user. Returns null if no progress record exists.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user-word-progress"
                ],
                "summary": "Get user word progress",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Word ID",
                        "name": "word_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User word progress retrieved successfully (may be null if not found)",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/api.UserWordProgressResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid word ID format",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update a word progress record for the current user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user-word-progress"
                ],
                "summary": "Update user word progress",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Word ID",
                        "name": "word_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "User word progress data to update",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.updateUserWordProgressRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User word progress updated successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/api.UserWordProgressResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid request parameters or word ID format",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "404": {
                        "description": "User word progress not found",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Delete a word progress record for the current user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user-word-progress"
                ],
                "summary": "Delete user word progress",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Word ID",
                        "name": "word_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User word progress deleted successfully",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "400": {
                        "description": "Invalid word ID format",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/users": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get a list of users with pagination. Allows for browsing through users.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "List users",
                "parameters": [
                    {
                        "maximum": 100,
                        "minimum": 1,
                        "type": "integer",
                        "default": 10,
                        "description": "Number of users to return per page",
                        "name": "limit",
                        "in": "query",
                        "required": true
                    },
                    {
                        "minimum": 0,
                        "type": "integer",
                        "default": 0,
                        "description": "Offset for pagination",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Users retrieved successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/api.UserResponse"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid query parameters",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "500": {
                        "description": "Server error during user listing",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Create a new user in the system. This endpoint is typically used for user registration.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Create a new user",
                "parameters": [
                    {
                        "description": "User information for registration",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.createUserRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "User created successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/api.UserResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid request parameters or validation failure",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "500": {
                        "description": "Server error during user creation",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/users/me": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get the profile of the currently authenticated user.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Get current user profile",
                "responses": {
                    "200": {
                        "description": "User profile retrieved successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/api.UserResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorized if the user is not authenticated",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "500": {
                        "description": "Server error when retrieving user profile",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/users/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieve a specific user's details by their ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Get a user by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User retrieved successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/api.UserResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid user ID format",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "500": {
                        "description": "Server error during user retrieval",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update an existing user's information by their ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Update a user",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID of the user to update",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "User information to update. Only provided fields are updated.",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.updateUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User updated successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/api.UserResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid request parameters or user ID format",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "500": {
                        "description": "Server error during user update",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Delete a user by their ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Delete a user",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID of the user to delete",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User deleted successfully",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "400": {
                        "description": "Invalid user ID format",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "500": {
                        "description": "Server error during user deletion",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/words": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "List words with pagination",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "words"
                ],
                "summary": "List words",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of words",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/api.WordResponse"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid query parameters",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "500": {
                        "description": "Failed to list words",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Create a new word with the input payload",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "words"
                ],
                "summary": "Create a new word",
                "parameters": [
                    {
                        "description": "Create Word Request",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.createWordRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Word created successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/api.WordResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid request payload",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "500": {
                        "description": "Failed to create word",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/words/search": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Search words by query string",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "words"
                ],
                "summary": "Search words",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search query",
                        "name": "query",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Search results",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/api.WordResponse"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid query parameters",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "500": {
                        "description": "Failed to search words",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/words/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get a word by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "words"
                ],
                "summary": "Get a word by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Word ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/api.WordResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid word ID",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "404": {
                        "description": "Word not found",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "500": {
                        "description": "Failed to get word",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update a word with the input payload",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "words"
                ],
                "summary": "Update a word",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Word ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update Word Request",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.updateWordRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/api.WordResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid request payload",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "404": {
                        "description": "Word not found",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "500": {
                        "description": "Failed to update word",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Delete a word by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "words"
                ],
                "summary": "Delete a word",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Word ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Word deleted successfully",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "400": {
                        "description": "Invalid word ID",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "404": {
                        "description": "Word not found",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "500": {
                        "description": "Failed to delete word",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/writing/prompt-submissions/{prompt_id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get a list of all writing submissions for a specific prompt",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "writing"
                ],
                "summary": "List user writing submissions by prompt ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Prompt ID",
                        "name": "prompt_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User writing submissions retrieved successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/api.UserWritingResponse"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid prompt ID",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "500": {
                        "description": "Failed to retrieve user writing submissions",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/writing/prompts": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get a list of all writing prompts",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "writing"
                ],
                "summary": "List all writing prompts",
                "responses": {
                    "200": {
                        "description": "Writing prompts retrieved successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/api.WritingPromptResponse"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Failed to retrieve writing prompts",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Add a new writing prompt to the database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "writing"
                ],
                "summary": "Create a new writing prompt",
                "parameters": [
                    {
                        "description": "Writing prompt object to create",
                        "name": "prompt",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.createWritingPromptRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Writing prompt created successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/api.WritingPromptResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid request body",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "500": {
                        "description": "Failed to create writing prompt",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/writing/prompts/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieve a specific writing prompt by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "writing"
                ],
                "summary": "Get a writing prompt by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Writing Prompt ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Writing prompt retrieved successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/api.WritingPromptResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid prompt ID",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "404": {
                        "description": "Writing prompt not found",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "500": {
                        "description": "Failed to retrieve writing prompt",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update an existing writing prompt by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "writing"
                ],
                "summary": "Update a writing prompt",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Writing Prompt ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Writing prompt fields to update",
                        "name": "prompt",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.updateWritingPromptRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Writing prompt updated successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/api.WritingPromptResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid request body or prompt ID",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "404": {
                        "description": "Writing prompt not found",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "500": {
                        "description": "Failed to update writing prompt",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Delete a specific writing prompt by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "writing"
                ],
                "summary": "Delete a writing prompt",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Writing Prompt ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Writing prompt deleted successfully",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "400": {
                        "description": "Invalid prompt ID",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "500": {
                        "description": "Failed to delete writing prompt",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/writing/submissions": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Add a new user writing submission to the database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "writing"
                ],
                "summary": "Create a new user writing submission",
                "parameters": [
                    {
                        "description": "User writing submission object to create",
                        "name": "writing",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.createUserWritingRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "User writing submission created successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/api.UserWritingResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid request body",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "500": {
                        "description": "Failed to create user writing submission",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/writing/submissions/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieve a specific user writing submission by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "writing"
                ],
                "summary": "Get a user writing submission by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User Writing Submission ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User writing submission retrieved successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/api.UserWritingResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid submission ID",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "404": {
                        "description": "User writing submission not found",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "500": {
                        "description": "Failed to retrieve user writing submission",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update an existing user writing submission by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "writing"
                ],
                "summary": "Update a user writing submission",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User Writing Submission ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "User writing submission fields to update",
                        "name": "writing",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.updateUserWritingRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User writing submission updated successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/api.UserWritingResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid request body or submission ID",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "404": {
                        "description": "User writing submission not found",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "500": {
                        "description": "Failed to update user writing submission",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Delete a specific user writing submission by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "writing"
                ],
                "summary": "Delete a user writing submission",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User Writing Submission ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User writing submission deleted successfully",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "400": {
                        "description": "Invalid submission ID",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "500": {
                        "description": "Failed to delete user writing submission",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/writing/users/{user_id}/submissions": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get a list of all writing submissions for a specific user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "writing"
                ],
                "summary": "List user writing submissions by user ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "user_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User writing submissions retrieved successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/api.UserWritingResponse"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid user ID",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "500": {
                        "description": "Failed to retrieve user writing submissions",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    }
                }
            }
        },
        "/health": {
            "get": {
                "description": "Check if the API server is running",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "health"
                ],
                "summary": "Health check",
                "responses": {
                    "200": {
                        "description": "API is healthy",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/api.HealthCheckResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/metrics": {
            "get": {
                "description": "Get system metrics and health information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "monitoring"
                ],
                "summary": "Get system metrics",
                "responses": {
                    "200": {
                        "description": "Metrics retrieved successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/api.MetricsResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/upload": {
            "post": {
                "description": "Uploads an image file to Cloudinary and returns the URL.",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Uploads"
                ],
                "summary": "Upload an image file",
                "parameters": [
                    {
                        "type": "file",
                        "description": "Image file to upload",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully uploaded image",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "url": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - File not found or invalid",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - Error opening or uploading file",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    }
                }
            }
        },
        "/upload-audio": {
            "post": {
                "description": "Uploads an audio file to Cloudinary and returns the URL.",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Uploads"
                ],
                "summary": "Upload an audio file",
                "parameters": [
                    {
                        "type": "file",
                        "description": "Audio file to upload",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully uploaded audio",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "url": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - File not found or invalid",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - Error opening or uploading file",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "analyze.Suggestion": {
            "type": "object",
            "properties": {
                "definition": {
                    "type": "string"
                },
                "level": {
                    "type": "string"
                },
                "word": {
                    "type": "string"
                }
            }
        },
        "analyze.TextAnalysisResponse": {
            "type": "object",
            "properties": {
                "words": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/analyze.WordAnalysis"
                    }
                }
            }
        },
        "analyze.WordAnalysis": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "level": {
                    "type": "string"
                },
                "suggestions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/analyze.Suggestion"
                    }
                },
                "word": {
                    "type": "string"
                }
            }
        },
        "api.AttemptAnswersResponse": {
            "type": "object",
            "properties": {
                "answers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.UserAnswerWithQuestionResponse"
                    }
                },
                "attempt_id": {
                    "type": "integer"
                },
                "correct_count": {
                    "type": "integer"
                },
                "total_answered": {
                    "type": "integer"
                }
            }
        },
        "api.AttemptScoreResponse": {
            "type": "object",
            "properties": {
                "attempt_id": {
                    "type": "integer"
                },
                "calculated_score": {
                    "type": "number"
                },
                "correct_answers": {
                    "type": "integer"
                },
                "total_questions": {
                    "type": "integer"
                }
            }
        },
        "api.CacheStats": {
            "type": "object",
            "properties": {
                "basic_stats": {
                    "type": "object",
                    "additionalProperties": true
                },
                "enabled": {
                    "type": "boolean"
                },
                "http_cache": {
                    "type": "object",
                    "additionalProperties": true
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "api.ConjugationData": {
            "type": "object",
            "properties": {
                "htd": {
                    "description": "simplePresent",
                    "allOf": [
                        {
                            "$ref": "#/definitions/api.WordState"
                        }
                    ]
                },
                "htht": {
                    "description": "presentParticiple",
                    "allOf": [
                        {
                            "$ref": "#/definitions/api.WordState"
                        }
                    ]
                },
                "httd": {
                    "description": "presentContinuous",
                    "allOf": [
                        {
                            "$ref": "#/definitions/api.WordState"
                        }
                    ]
                },
                "qkd": {
                    "description": "simplePast",
                    "allOf": [
                        {
                            "$ref": "#/definitions/api.WordState"
                        }
                    ]
                }
            }
        },
        "api.ContentModel": {
            "type": "object",
            "properties": {
                "anto": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "syno": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "api.ContentResponse": {
            "type": "object",
            "properties": {
                "content_id": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "part_id": {
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "api.DatabaseStats": {
            "type": "object",
            "properties": {
                "idle": {
                    "type": "integer"
                },
                "in_use": {
                    "type": "integer"
                },
                "max_idle_closed": {
                    "type": "integer"
                },
                "max_lifetime": {
                    "description": "Duration as string for Swagger compatibility",
                    "type": "string"
                },
                "open_connections": {
                    "type": "integer"
                },
                "wait_count": {
                    "type": "integer"
                },
                "wait_duration": {
                    "description": "Duration as string for Swagger compatibility",
                    "type": "string"
                }
            }
        },
        "api.ExamAttemptResponse": {
            "type": "object",
            "properties": {
                "attempt_id": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "end_time": {
                    "type": "string"
                },
                "exam_id": {
                    "type": "integer"
                },
                "score": {
                    "description": "Using string for NUMERIC precision",
                    "type": "string"
                },
                "start_time": {
                    "type": "string"
                },
                "status": {
                    "$ref": "#/definitions/db.ExamStatusEnum"
                },
                "updated_at": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "api.ExamAttemptStatsResponse": {
            "type": "object",
            "properties": {
                "abandoned_attempts": {
                    "type": "integer"
                },
                "average_score": {
                    "type": "string"
                },
                "completed_attempts": {
                    "type": "integer"
                },
                "highest_score": {
                    "type": "string"
                },
                "in_progress_attempts": {
                    "type": "integer"
                },
                "lowest_score": {
                    "type": "string"
                },
                "total_attempts": {
                    "type": "integer"
                }
            }
        },
        "api.ExamContentWithQuestions": {
            "type": "object",
            "properties": {
                "content_id": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "questions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.QuestionResponse"
                    }
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "api.ExamPartWithQuestions": {
            "type": "object",
            "properties": {
                "contents": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.ExamContentWithQuestions"
                    }
                },
                "part_id": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "api.ExamQuestionsResponse": {
            "type": "object",
            "properties": {
                "exam_id": {
                    "type": "integer"
                },
                "exam_title": {
                    "type": "string"
                },
                "parts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.ExamPartWithQuestions"
                    }
                },
                "total_questions": {
                    "type": "integer"
                }
            }
        },
        "api.ExamResponse": {
            "type": "object",
            "properties": {
                "exam_id": {
                    "type": "integer"
                },
                "is_unlocked": {
                    "type": "boolean"
                },
                "time_limit_minutes": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "api.ExampleResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "meaning": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "api.GrammarContent": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.GrammarContentElement"
                    }
                },
                "sub_title": {
                    "type": "string"
                }
            }
        },
        "api.GrammarContentElement": {
            "type": "object",
            "properties": {
                "c": {
                    "type": "string"
                },
                "e": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.GrammarExample"
                    }
                },
                "f": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "api.GrammarExample": {
            "type": "object",
            "properties": {
                "e": {
                    "type": "string"
                }
            }
        },
        "api.GrammarResponse": {
            "type": "object",
            "properties": {
                "contents": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.GrammarContent"
                    }
                },
                "grammar_key": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "level": {
                    "type": "integer"
                },
                "related": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "tag": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "api.HealthCheckResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "timestamp": {
                    "type": "string"
                }
            }
        },
        "api.I18nStatsResponse": {
            "type": "object",
            "properties": {
                "current_language": {
                    "type": "string"
                },
                "fallback_language": {
                    "type": "string"
                },
                "languages": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/api.LanguageResponse"
                    }
                },
                "statistics": {
                    "type": "object",
                    "additionalProperties": true
                },
                "supported_languages": {
                    "type": "integer"
                }
            }
        },
        "api.IndexStats": {
            "type": "object",
            "properties": {
                "grammars_indexes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "total_indexes": {
                    "type": "integer"
                },
                "words_indexes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "api.LanguageResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "currently_used": {
                    "type": "boolean"
                },
                "is_default": {
                    "type": "boolean"
                },
                "is_supported": {
                    "type": "boolean"
                },
                "message_count": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "native_name": {
                    "type": "string"
                }
            }
        },
        "api.LeaderboardEntry": {
            "type": "object",
            "properties": {
                "end_time": {
                    "type": "string"
                },
                "rank": {
                    "type": "integer"
                },
                "score": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "api.MeanModel": {
            "type": "object",
            "properties": {
                "examples": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "mean": {
                    "type": "string"
                }
            }
        },
        "api.MeaningData": {
            "type": "object",
            "properties": {
                "kind": {
                    "type": "string"
                },
                "means": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.MeanModel"
                    }
                }
            }
        },
        "api.MemStats": {
            "type": "object",
            "properties": {
                "alloc": {
                    "type": "integer"
                },
                "num_gc": {
                    "type": "integer"
                },
                "pause_total_ns": {
                    "type": "integer"
                },
                "sys": {
                    "type": "integer"
                },
                "total_alloc": {
                    "type": "integer"
                }
            }
        },
        "api.MemoryStats": {
            "type": "object",
            "properties": {
                "alloc_mb": {
                    "type": "integer"
                },
                "goroutines": {
                    "type": "integer"
                },
                "heap_inuse_mb": {
                    "type": "integer"
                },
                "heap_objects": {
                    "type": "integer"
                },
                "num_gc": {
                    "type": "integer"
                },
                "sys_mb": {
                    "type": "integer"
                },
                "total_alloc_mb": {
                    "type": "integer"
                }
            }
        },
        "api.MessageRequest": {
            "type": "object",
            "required": [
                "key",
                "message"
            ],
            "properties": {
                "key": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "api.MessagesRequest": {
            "type": "object",
            "required": [
                "messages"
            ],
            "properties": {
                "messages": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "api.MetricsResponse": {
            "type": "object",
            "properties": {
                "blacklisted_tokens": {
                    "type": "integer"
                },
                "mem_stats": {
                    "$ref": "#/definitions/api.MemStats"
                },
                "num_goroutine": {
                    "type": "integer"
                },
                "timestamp": {
                    "type": "string"
                },
                "uptime": {
                    "type": "string"
                }
            }
        },
        "api.PartResponse": {
            "type": "object",
            "properties": {
                "exam_id": {
                    "type": "integer"
                },
                "part_id": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "api.PerformanceStats": {
            "type": "object",
            "properties": {
                "background_tasks": {
                    "type": "object",
                    "additionalProperties": true
                },
                "cache": {
                    "$ref": "#/definitions/api.CacheStats"
                },
                "database": {
                    "$ref": "#/definitions/api.DatabaseStats"
                },
                "indexes": {
                    "$ref": "#/definitions/api.IndexStats"
                },
                "memory": {
                    "$ref": "#/definitions/api.MemoryStats"
                },
                "request_time": {
                    "type": "string"
                },
                "server": {
                    "$ref": "#/definitions/api.ServerStats"
                }
            }
        },
        "api.QuestionResponse": {
            "type": "object",
            "properties": {
                "content_id": {
                    "type": "integer"
                },
                "explanation": {
                    "type": "string"
                },
                "image_url": {
                    "type": "string"
                },
                "keywords": {
                    "type": "string"
                },
                "media_url": {
                    "type": "string"
                },
                "possible_answers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "question_id": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                },
                "true_answer": {
                    "type": "string"
                }
            }
        },
        "api.Response": {
            "type": "object",
            "properties": {
                "data": {},
                "error": {
                    "type": "string"
                },
                "language": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "api.SecurityConfig": {
            "type": "object",
            "properties": {
                "max_timestamp_age": {
                    "description": "Maximum timestamp age in seconds",
                    "type": "integer"
                },
                "required_headers": {
                    "description": "List of required headers",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "secret_key": {
                    "description": "Client-side security secret",
                    "type": "string"
                },
                "security_level": {
                    "description": "Required security level",
                    "type": "integer"
                },
                "wasm_enabled": {
                    "description": "WASM support enabled",
                    "type": "boolean"
                },
                "web_worker_enabled": {
                    "description": "Web worker support enabled",
                    "type": "boolean"
                }
            }
        },
        "api.ServerStats": {
            "type": "object",
            "properties": {
                "compression_enabled": {
                    "type": "boolean"
                },
                "http_cache_enabled": {
                    "type": "boolean"
                },
                "rate_limit_enabled": {
                    "type": "boolean"
                },
                "uptime": {
                    "description": "Duration as string for Swagger compatibility",
                    "type": "string"
                }
            }
        },
        "api.SpeakingSessionResponse": {
            "type": "object",
            "properties": {
                "end_time": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "session_topic": {
                    "type": "string"
                },
                "start_time": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "api.SpeakingTurnResponse": {
            "type": "object",
            "properties": {
                "ai_evaluation": {
                    "type": "object"
                },
                "ai_score": {
                    "type": "number"
                },
                "audio_recording_path": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "session_id": {
                    "type": "integer"
                },
                "speaker_type": {
                    "type": "string"
                },
                "text_spoken": {
                    "type": "string"
                },
                "timestamp": {
                    "type": "string"
                }
            }
        },
        "api.SynonymData": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.ContentModel"
                    }
                },
                "kind": {
                    "type": "string"
                }
            }
        },
        "api.UserAnswerResponse": {
            "type": "object",
            "properties": {
                "answer_time": {
                    "type": "string"
                },
                "attempt_id": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "is_correct": {
                    "type": "boolean"
                },
                "question_id": {
                    "type": "integer"
                },
                "selected_answer": {
                    "type": "string"
                },
                "user_answer_id": {
                    "type": "integer"
                }
            }
        },
        "api.UserAnswerWithQuestionResponse": {
            "type": "object",
            "properties": {
                "answer_time": {
                    "type": "string"
                },
                "attempt_id": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "explanation": {
                    "type": "string"
                },
                "is_correct": {
                    "type": "boolean"
                },
                "possible_answers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "question_id": {
                    "type": "integer"
                },
                "question_title": {
                    "type": "string"
                },
                "selected_answer": {
                    "type": "string"
                },
                "true_answer": {
                    "type": "string"
                },
                "user_answer_id": {
                    "type": "integer"
                }
            }
        },
        "api.UserResponse": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2025-05-01T13:45:00Z"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "api.UserWordProgressResponse": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2025-05-01T13:45:00Z"
                },
                "ease_factor": {
                    "type": "number"
                },
                "interval_days": {
                    "type": "integer"
                },
                "last_reviewed_at": {
                    "type": "string"
                },
                "next_review_at": {
                    "type": "string"
                },
                "repetitions": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2025-05-01T13:45:00Z"
                },
                "user_id": {
                    "type": "integer"
                },
                "word_id": {
                    "type": "integer"
                }
            }
        },
        "api.UserWritingResponse": {
            "description": "Response object for user writing submissions",
            "type": "object",
            "properties": {
                "ai_feedback": {
                    "description": "AIFeedback is a JSON object containing AI-generated feedback",
                    "type": "object"
                },
                "ai_score": {
                    "type": "number"
                },
                "evaluated_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "prompt_id": {
                    "type": "integer"
                },
                "submission_text": {
                    "type": "string"
                },
                "submitted_at": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "api.WordProgressResponse": {
            "type": "object",
            "properties": {
                "conjugation": {
                    "$ref": "#/definitions/api.ConjugationData"
                },
                "descript_level": {
                    "type": "string"
                },
                "freq": {
                    "type": "number"
                },
                "id": {
                    "type": "integer"
                },
                "level": {
                    "type": "integer"
                },
                "means": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.MeaningData"
                    }
                },
                "pronounce": {
                    "type": "string"
                },
                "short_mean": {
                    "type": "string"
                },
                "snym": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.SynonymData"
                    }
                },
                "word": {
                    "type": "string"
                }
            }
        },
        "api.WordResponse": {
            "type": "object",
            "properties": {
                "conjugation": {
                    "$ref": "#/definitions/api.ConjugationData"
                },
                "descript_level": {
                    "type": "string"
                },
                "freq": {
                    "type": "number"
                },
                "id": {
                    "type": "integer"
                },
                "level": {
                    "type": "integer"
                },
                "means": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.MeaningData"
                    }
                },
                "pronounce": {
                    "type": "string"
                },
                "short_mean": {
                    "type": "string"
                },
                "snym": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.SynonymData"
                    }
                },
                "word": {
                    "type": "string"
                }
            }
        },
        "api.WordState": {
            "type": "object",
            "properties": {
                "p": {
                    "type": "string"
                },
                "w": {
                    "type": "string"
                }
            }
        },
        "api.WordWithProgressResponse": {
            "type": "object",
            "properties": {
                "progress": {
                    "$ref": "#/definitions/api.UserWordProgressResponse"
                },
                "word": {
                    "$ref": "#/definitions/api.WordProgressResponse"
                }
            }
        },
        "api.WritingPromptResponse": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "difficulty_level": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "prompt_text": {
                    "type": "string"
                },
                "topic": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "api.addVersionRequest": {
            "type": "object",
            "required": [
                "description",
                "title",
                "version"
            ],
            "properties": {
                "changes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "deprecated": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "description": {
                    "type": "string"
                },
                "downloads": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "min_version": {
                    "type": "string"
                },
                "required": {
                    "type": "boolean"
                },
                "title": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "api.analyzeMultipleTextsRequest": {
            "type": "object",
            "required": [
                "texts"
            ],
            "properties": {
                "min_synonym_level": {
                    "type": "string"
                },
                "texts": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "api.analyzeTextRequest": {
            "type": "object",
            "required": [
                "text"
            ],
            "properties": {
                "async": {
                    "type": "boolean"
                },
                "min_synonym_level": {
                    "type": "string"
                },
                "text": {
                    "type": "string"
                }
            }
        },
        "api.analyzeTextResponse": {
            "type": "object",
            "properties": {
                "cached": {
                    "type": "boolean"
                },
                "error": {
                    "type": "string"
                },
                "result": {
                    "$ref": "#/definitions/analyze.TextAnalysisResponse"
                },
                "text": {
                    "type": "string"
                },
                "timestamp": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "api.backupListItem": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "download_url": {
                    "type": "string"
                },
                "filename": {
                    "type": "string"
                },
                "size": {
                    "type": "integer"
                }
            }
        },
        "api.backupRequest": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "filename": {
                    "type": "string"
                }
            }
        },
        "api.backupResponse": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "download_url": {
                    "type": "string"
                },
                "filename": {
                    "type": "string"
                },
                "size": {
                    "type": "integer"
                }
            }
        },
        "api.batchGetExamplesRequest": {
            "type": "object",
            "required": [
                "ids"
            ],
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "api.batchGetGrammarsRequest": {
            "type": "object",
            "required": [
                "ids"
            ],
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "api.createContentRequest": {
            "type": "object",
            "required": [
                "description",
                "part_id",
                "type"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "part_id": {
                    "type": "integer",
                    "minimum": 1
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "api.createExamAttemptRequest": {
            "type": "object",
            "required": [
                "exam_id"
            ],
            "properties": {
                "exam_id": {
                    "type": "integer",
                    "minimum": 1
                }
            }
        },
        "api.createExamRequest": {
            "type": "object",
            "required": [
                "time_limit_minutes",
                "title"
            ],
            "properties": {
                "is_unlocked": {
                    "type": "boolean"
                },
                "time_limit_minutes": {
                    "type": "integer",
                    "minimum": 1
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "api.createExampleRequest": {
            "type": "object",
            "required": [
                "meaning",
                "title"
            ],
            "properties": {
                "meaning": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "api.createGrammarRequest": {
            "type": "object",
            "required": [
                "grammar_key",
                "level",
                "related",
                "tag",
                "title"
            ],
            "properties": {
                "contents": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.GrammarContent"
                    }
                },
                "grammar_key": {
                    "type": "string"
                },
                "level": {
                    "type": "integer",
                    "minimum": 1
                },
                "related": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "tag": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "api.createPartRequest": {
            "type": "object",
            "required": [
                "exam_id",
                "title"
            ],
            "properties": {
                "exam_id": {
                    "type": "integer",
                    "minimum": 1
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "api.createQuestionRequest": {
            "type": "object",
            "required": [
                "content_id",
                "explanation",
                "possible_answers",
                "title",
                "true_answer"
            ],
            "properties": {
                "content_id": {
                    "type": "integer",
                    "minimum": 1
                },
                "explanation": {
                    "type": "string"
                },
                "image_url": {
                    "type": "string"
                },
                "keywords": {
                    "type": "string"
                },
                "media_url": {
                    "type": "string"
                },
                "possible_answers": {
                    "type": "array",
                    "minItems": 1,
                    "items": {
                        "type": "string"
                    }
                },
                "title": {
                    "type": "string"
                },
                "true_answer": {
                    "type": "string"
                }
            }
        },
        "api.createSpeakingSessionRequest": {
            "type": "object",
            "required": [
                "user_id"
            ],
            "properties": {
                "end_time": {
                    "type": "string"
                },
                "session_topic": {
                    "type": "string"
                },
                "start_time": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer",
                    "minimum": 1
                }
            }
        },
        "api.createSpeakingTurnRequest": {
            "type": "object",
            "required": [
                "session_id",
                "speaker_type"
            ],
            "properties": {
                "ai_evaluation": {
                    "type": "object"
                },
                "ai_score": {
                    "type": "number"
                },
                "audio_recording_path": {
                    "type": "string"
                },
                "session_id": {
                    "type": "integer",
                    "minimum": 1
                },
                "speaker_type": {
                    "type": "string"
                },
                "text_spoken": {
                    "type": "string"
                },
                "timestamp": {
                    "type": "string"
                }
            }
        },
        "api.createUserAnswerRequest": {
            "type": "object",
            "required": [
                "attempt_id",
                "question_id",
                "selected_answer"
            ],
            "properties": {
                "attempt_id": {
                    "type": "integer",
                    "minimum": 1
                },
                "question_id": {
                    "type": "integer",
                    "minimum": 1
                },
                "selected_answer": {
                    "type": "string"
                }
            }
        },
        "api.createUserRequest": {
            "type": "object",
            "required": [
                "email",
                "password",
                "username"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string",
                    "minLength": 8
                },
                "username": {
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 3
                }
            }
        },
        "api.createUserWordProgressRequest": {
            "type": "object",
            "required": [
                "word_id"
            ],
            "properties": {
                "ease_factor": {
                    "type": "number",
                    "minimum": 0
                },
                "interval_days": {
                    "type": "integer",
                    "minimum": 0
                },
                "last_reviewed_at": {
                    "type": "string"
                },
                "next_review_at": {
                    "type": "string"
                },
                "repetitions": {
                    "type": "integer",
                    "minimum": 0
                },
                "word_id": {
                    "type": "integer"
                }
            }
        },
        "api.createUserWritingRequest": {
            "description": "Request object for creating user writing submissions",
            "type": "object",
            "required": [
                "submission_text",
                "user_id"
            ],
            "properties": {
                "ai_feedback": {
                    "description": "AIFeedback is a JSON object containing AI-generated feedback",
                    "type": "object"
                },
                "ai_score": {
                    "type": "number"
                },
                "prompt_id": {
                    "type": "integer"
                },
                "submission_text": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer",
                    "minimum": 1
                }
            }
        },
        "api.createWordRequest": {
            "type": "object",
            "required": [
                "descript_level",
                "freq",
                "level",
                "pronounce",
                "short_mean",
                "word"
            ],
            "properties": {
                "conjugation": {
                    "$ref": "#/definitions/api.ConjugationData"
                },
                "descript_level": {
                    "type": "string"
                },
                "freq": {
                    "type": "number"
                },
                "level": {
                    "type": "integer"
                },
                "means": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.MeaningData"
                    }
                },
                "pronounce": {
                    "type": "string"
                },
                "short_mean": {
                    "type": "string"
                },
                "snym": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.SynonymData"
                    }
                },
                "word": {
                    "type": "string"
                }
            }
        },
        "api.createWritingPromptRequest": {
            "type": "object",
            "required": [
                "prompt_text"
            ],
            "properties": {
                "difficulty_level": {
                    "type": "string"
                },
                "prompt_text": {
                    "type": "string"
                },
                "topic": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "api.loginUserRequest": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string",
                    "minLength": 6
                }
            }
        },
        "api.loginUserResponse": {
            "type": "object",
            "properties": {
                "access_token": {
                    "type": "string"
                },
                "refresh_token": {
                    "type": "string"
                },
                "security_config": {
                    "$ref": "#/definitions/api.SecurityConfig"
                },
                "user": {
                    "$ref": "#/definitions/api.UserResponse"
                }
            }
        },
        "api.logoutRequest": {
            "type": "object",
            "properties": {
                "refresh_token": {
                    "type": "string"
                }
            }
        },
        "api.notifyUpgradeRequest": {
            "type": "object",
            "required": [
                "version"
            ],
            "properties": {
                "target_users": {
                    "description": "If empty, broadcasts to all",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "api.refreshTokenRequest": {
            "type": "object",
            "required": [
                "refresh_token"
            ],
            "properties": {
                "refresh_token": {
                    "type": "string"
                }
            }
        },
        "api.refreshTokenResponse": {
            "type": "object",
            "properties": {
                "access_token": {
                    "type": "string"
                },
                "refresh_token": {
                    "type": "string"
                },
                "user": {
                    "$ref": "#/definitions/api.UserResponse"
                }
            }
        },
        "api.registerUserRequest": {
            "type": "object",
            "required": [
                "email",
                "password",
                "username"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string",
                    "minLength": 8
                },
                "username": {
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 3
                }
            }
        },
        "api.registerUserResponse": {
            "type": "object",
            "properties": {
                "access_token": {
                    "type": "string"
                },
                "refresh_token": {
                    "type": "string"
                },
                "security_config": {
                    "$ref": "#/definitions/api.SecurityConfig"
                },
                "user": {
                    "$ref": "#/definitions/api.UserResponse"
                }
            }
        },
        "api.restoreRequest": {
            "type": "object",
            "required": [
                "filename"
            ],
            "properties": {
                "filename": {
                    "type": "string"
                }
            }
        },
        "api.subscriptionRequest": {
            "type": "object",
            "properties": {
                "client_version": {
                    "type": "string"
                },
                "notify_major": {
                    "type": "boolean"
                },
                "notify_minor": {
                    "type": "boolean"
                },
                "notify_patches": {
                    "type": "boolean"
                },
                "notify_required": {
                    "type": "boolean"
                },
                "platform": {
                    "type": "string"
                }
            }
        },
        "api.updateContentRequest": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "part_id": {
                    "type": "integer",
                    "minimum": 1
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "api.updateExamAttemptRequest": {
            "type": "object",
            "properties": {
                "score": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "api.updateExamRequest": {
            "type": "object",
            "properties": {
                "is_unlocked": {
                    "type": "boolean"
                },
                "time_limit_minutes": {
                    "type": "integer",
                    "minimum": 1
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "api.updateExampleRequest": {
            "type": "object",
            "required": [
                "meaning",
                "title"
            ],
            "properties": {
                "meaning": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "api.updateGrammarRequest": {
            "type": "object",
            "required": [
                "id"
            ],
            "properties": {
                "contents": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.GrammarContent"
                    }
                },
                "grammar_key": {
                    "type": "string"
                },
                "id": {
                    "type": "integer",
                    "minimum": 1
                },
                "level": {
                    "type": "integer",
                    "minimum": 1
                },
                "related": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "tag": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "api.updatePartRequest": {
            "type": "object",
            "properties": {
                "exam_id": {
                    "type": "integer",
                    "minimum": 1
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "api.updateQuestionRequest": {
            "type": "object",
            "properties": {
                "content_id": {
                    "type": "integer",
                    "minimum": 1
                },
                "explanation": {
                    "type": "string"
                },
                "image_url": {
                    "type": "string"
                },
                "keywords": {
                    "type": "string"
                },
                "media_url": {
                    "type": "string"
                },
                "possible_answers": {
                    "type": "array",
                    "minItems": 1,
                    "items": {
                        "type": "string"
                    }
                },
                "title": {
                    "type": "string"
                },
                "true_answer": {
                    "type": "string"
                }
            }
        },
        "api.updateSpeakingSessionRequest": {
            "type": "object",
            "properties": {
                "end_time": {
                    "type": "string"
                },
                "session_topic": {
                    "type": "string"
                },
                "start_time": {
                    "type": "string"
                }
            }
        },
        "api.updateSpeakingTurnRequest": {
            "type": "object",
            "properties": {
                "ai_evaluation": {
                    "type": "object"
                },
                "ai_score": {
                    "type": "number"
                },
                "audio_recording_path": {
                    "type": "string"
                },
                "text_spoken": {
                    "type": "string"
                },
                "timestamp": {
                    "type": "string"
                }
            }
        },
        "api.updateUserRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string",
                    "minLength": 8
                },
                "username": {
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 3
                }
            }
        },
        "api.updateUserWordProgressRequest": {
            "type": "object",
            "properties": {
                "ease_factor": {
                    "type": "number",
                    "minimum": 0
                },
                "interval_days": {
                    "type": "integer",
                    "minimum": 0
                },
                "last_reviewed_at": {
                    "type": "string"
                },
                "next_review_at": {
                    "type": "string"
                },
                "repetitions": {
                    "type": "integer",
                    "minimum": 0
                }
            }
        },
        "api.updateUserWritingRequest": {
            "description": "Request object for updating user writing submissions",
            "type": "object",
            "properties": {
                "ai_feedback": {
                    "description": "AIFeedback is a JSON object containing AI-generated feedback",
                    "type": "object"
                },
                "ai_score": {
                    "type": "number"
                },
                "evaluated_at": {
                    "type": "string"
                },
                "submission_text": {
                    "type": "string"
                }
            }
        },
        "api.updateWordRequest": {
            "type": "object",
            "required": [
                "id"
            ],
            "properties": {
                "conjugation": {
                    "$ref": "#/definitions/api.ConjugationData"
                },
                "descript_level": {
                    "type": "string"
                },
                "freq": {
                    "type": "number"
                },
                "id": {
                    "type": "integer",
                    "minimum": 1
                },
                "level": {
                    "type": "integer"
                },
                "means": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.MeaningData"
                    }
                },
                "pronounce": {
                    "type": "string"
                },
                "short_mean": {
                    "type": "string"
                },
                "snym": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.SynonymData"
                    }
                },
                "word": {
                    "type": "string"
                }
            }
        },
        "api.updateWritingPromptRequest": {
            "type": "object",
            "properties": {
                "difficulty_level": {
                    "type": "string"
                },
                "prompt_text": {
                    "type": "string"
                },
                "topic": {
                    "type": "string"
                }
            }
        },
        "api.upgradeCheckRequest": {
            "type": "object",
            "required": [
                "current_version"
            ],
            "properties": {
                "current_version": {
                    "type": "string"
                },
                "platform": {
                    "type": "string"
                },
                "user_agent": {
                    "type": "string"
                }
            }
        },
        "db.ExamStatusEnum": {
            "type": "string",
            "enum": [
                "in_progress",
                "completed",
                "abandoned"
            ],
            "x-enum-varnames": [
                "ExamStatusEnumInProgress",
                "ExamStatusEnumCompleted",
                "ExamStatusEnumAbandoned"
            ]
        },
        "upgrade.AppVersion": {
            "type": "object",
            "properties": {
                "changes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "deprecated": {
                    "description": "versions that are deprecated",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "description": {
                    "type": "string"
                },
                "downloads": {
                    "description": "platform -\u003e download URL",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "min_version": {
                    "type": "string"
                },
                "release_date": {
                    "type": "string"
                },
                "required": {
                    "type": "boolean"
                },
                "title": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "upgrade.UpdateCheckResponse": {
            "type": "object",
            "properties": {
                "has_update": {
                    "type": "boolean"
                },
                "latest_version": {
                    "$ref": "#/definitions/upgrade.AppVersion"
                },
                "message": {
                    "type": "string"
                },
                "notifications": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/websocket.UpgradeNotification"
                    }
                },
                "update_required": {
                    "type": "boolean"
                }
            }
        },
        "websocket.UpgradeNotification": {
            "type": "object",
            "properties": {
                "changes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "description": {
                    "type": "string"
                },
                "release_date": {
                    "type": "string"
                },
                "required": {
                    "type": "boolean"
                },
                "title": {
                    "type": "string"
                },
                "update_url": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        }
    }
}